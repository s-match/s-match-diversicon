/*******************************************************************************
 * Copyright 2015
 * Ubiquitous Knowledge Processing (UKP) Lab
 * Technische Universit√§t Darmstadt
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package it.unitn.disi.smatch.oracles.uby;

import de.tudarmstadt.ukp.lmf.model.miscellaneous.EVarType;
import de.tudarmstadt.ukp.lmf.model.miscellaneous.VarType;
import de.tudarmstadt.ukp.lmf.model.semantics.SynsetRelation;

/**
 * Holds some extra field for S-Match
 * 
 * 
 * See <a href=
 * "https://github.com/dkpro/dkpro-uby/blob/master/de.tudarmstadt.ukp.uby.lmf.model-asl/src/main/java/de/tudarmstadt/ukp/lmf/model/enums/ERelNameSemantics.java"
 * target="_blank"> ERelNameSemantics</a> for possible relation names.
 * 
 * @since 0.1
 */
public class SmuSynsetRelation extends SynsetRelation {

	@VarType(type = EVarType.ATTRIBUTE)
	protected int depth;

	@VarType(type = EVarType.ATTRIBUTE)
	protected String provenance;
	
	/**
	 * Copies all the fields of {@code sr into this object}
	 */
	public SmuSynsetRelation(SynsetRelation sr) {
	    this.setFrequencies(sr.getFrequencies());
	    this.setRelName(sr.getRelName());
	    this.setRelType(sr.getRelType());
	    this.setSource(sr.getSource());
	    this.setTarget(sr.getTarget());	    
	}

	public SmuSynsetRelation() {
		super();
		this.depth = 1;
		this.provenance = "";
	}

	/**
	 * The identifier of source who produced the data. Must be unique worldwide.
	 * Defaults to "". Synthetic relations generated by S-Match Uby will have
	 * {@link it.unitn.disi.smatch.oracles.uby.SmuUby#SMATCH_UBY_URL
	 * SMATCH_UBY_URL} as identifier.
	 */	
	public String getProvenance() {
		return provenance;
	}

	/**
	 * See {@link #getProvenance()}.
	 */
	public void setProvenance(String provenance) {
		this.provenance = provenance;
	}

	/**
	 * The depth of the relation, useful if it was computed for a transitive closure, otherwise 
	 * defaults to 1.  
	 */
	// TODO define semantics for self-loops, do they have depth 0 ?
	public int getDepth() {
		return depth;
	}

	/**
	 * See {@link #getDepth()}
	 */
	public void setDepth(int depth) {
		this.depth = depth;
	}

    @Override
    public String toString() {
        String sourceId = source == null ? "null" : source.getId();
        String targetId = target == null ? "null" : target.getId();
        
        return "SmuSynsetRelation [depth=" + depth + ", provenance=" + provenance + ", source=" + sourceId + ", target="
                + targetId + ", relType=" + relType + ", relName=" + relName + ", frequencies=" + frequencies + "]";
    }
	
	

}
